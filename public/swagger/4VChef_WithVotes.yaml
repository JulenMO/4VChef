openapi: 3.0.3
info:
  title: 4V CHEF - OpenAPI 1.1
  description: |
    Updated API Specification for 4V CHEF
    Manage recipes for 4V Chefs
  termsOfService: http://swagger.io/terms/
  contact:
    email: julen.medina.oses@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.1.0
servers:
  - url: http://localhost:8000
tags:
  - name: recipes
    description: Everything about Recipes
paths:
  /recipes:
    get:
      tags:
        - recipes
      summary: Retrieve the list of recipes
      operationId: searchRecipes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        "400":
          description: Any problem with server
    post:
      tags:
        - recipes
      summary: Add a new recipe
      operationId: newRecipe
      requestBody:
        description: New Recipe information
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecipeNew"
        required: true
      responses:
        "201":
          description: Recipe created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        "400":
          description: Validation Errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /recipes/{recipeId}/rating/{rate}:
    post:
      tags:
        - recipes
      summary: Add a rating to a recipe
      operationId: uploadRating
      parameters:
        - name: recipeId
          in: path
          description: ID of the recipe to rate
          required: true
          schema:
            type: integer
        - name: rate
          in: path
          description: Rate, from 0 to 5 stars
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Recipe updated with new rating
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        "400":
          description: Error with rating input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Ingredient:
      type: object
      properties:
        name:
          type: string
          example: Harina
        quantity:
          type: number
          example: 200
        unit:
          type: string
          example: g

    Step:
      type: object
      properties:
        stepOrder:
          type: integer
          example: 1
        description:
          type: string
          example: Mezclar los ingredientes secos.

    Nutrient:
      type: object
      properties:
        name:
          type: string
          example: Calories
        amount:
          type: number
          example: 850

    Rating:
      type: object
      properties:
        id:
          type: integer
          example: 1
        value:
          type: integer
          example: 4

    Recipe:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: Mega Hamburguesa Suprema
        numberDiner:
          type: integer
          example: 2
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/Ingredient"
        steps:
          type: array
          items:
            $ref: "#/components/schemas/Step"
        nutrients:
          type: array
          items:
            $ref: "#/components/schemas/Nutrient"
        ratings:
          type: array
          items:
            $ref: "#/components/schemas/Rating"

    RecipeNew:
      type: object
      properties:
        title:
          type: string
          example: Mega Hamburguesa Suprema
        number-diner:
          type: integer
          example: 2
        ingredients:
          type: array
          items:
            $ref: "#/components/schemas/Ingredient"
        steps:
          type: array
          items:
            $ref: "#/components/schemas/Step"
        nutrients:
          type: array
          items:
            $ref: "#/components/schemas/Nutrient"

    Error:
      type: object
      properties:
        code:
          type: integer
          example: 21
        description:
          type: string
          example: The name is mandatory
